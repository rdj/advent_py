# Part one: b=c=65
set b 65
set c b

# Part two: b = b * 100 + 100_000; c = b + 17_000
jnz a 2
jnz 1 5
mul b 100
sub b -100000
set c b
sub c -17000


# for b in range(b, c+1, 17):
    set f 1

    ### This double loop is a naive prime checker:

    # for d in range(2, b):
    set d 2
        # for e in range(2, b):
        set e 2

            # if d * e == b: f = 0
            set g d
            mul g e
            sub g b
            jnz g 2
            set f 0

            # e loop check/increment
            sub e -1
            set g e
            sub g b
            jnz g -8

        # d loop check/increment
        sub d -1
        set g d
        sub g b
        jnz g -13

    ### h counts how many are composite

    # if f == 0: h += 1
    jnz f 2
    sub h -1

    # b loop check/+17
    set g b
    sub g c
    jnz g 2
    jnz 1 3
    sub b -17
    jnz 1 -23


